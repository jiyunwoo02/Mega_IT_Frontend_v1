(1) html 언어 
- 마크업 언어 <시작명령어>콘텐츠</끝명령어> <- 명령어 : 태그
- <명령어 속성 = "값">콘텐츠</끝명령>
- <시작 속성 = "값"> : 빈요소

- DTD 선언 : <!DOCTYPE HTML> -> 버전
<html>
    => lang = "주국가" ko, en

<head></head> : 준비, 설정 
    => <meta > 빈 요소 : 설정, 정보 <- 인코딩 설정 : text 렌더링 방법
         <title>제목</title> : html 문서 제목

<body></body> : 콘텐츠
     => 콘텐츠 -> 요소 ) 명령어, 속성,  콘텐츠 
        / **요소의 성격 ; block, inline(inline-block)
</html>

(2)
인터넷 -> 정보[콘텐츠 설정, 기능]
	html -> 3가지
	node -> element, 속성, text
<<text>>
hn -> h1 ~ h6 : 논리성* 1) 웹표준 방법 : 논리성 
		2) 시맨틱 요소 방법 : 구조 -> outliner 목차
p -> 작은 그룹 -> 단락
br
hr

(3)
목록 요소 
- ul(list 순서 x), ol(순서 o) : li들 같은 그룹으로 묶음 
- dl : dt -> 제목, dd -> 본문, 제목 설명, 제목 값 => 그룹으로 묶음

- 감싸는 부모요소, 감싸지는 자식요소 -> 같은 부모를 가진 자식들 : 형제관계
- 종속관계 ex) 부모 -> 자식 -> 손자손녀

(4)
html5 -> semantic 요소 -> 구조 -> outliner
			-> 콘텐츠
구조) - 주인정보, - 주요서비스, - 주내용, - 부가내용, - 저작권/서비스정보
        - header(h1)  - nav(GNB)  - main(*주내용) - aside(부가내용)  - footer(hm 넣으면 안됨)

~ article -> 포괄적인 , section -> 개별적인 (도용불가능)
~ main> 내용요소, 내용요소> main, outlinear : 목차
~ nav -> header 독자적으로 사용 가능

- 브라우저 렌더링 -> 콘텐츠
- outline -> 구조

(5)
*시맨틱 구조 -> 목차
*일반 요소 -> outlinear x

(6)
그릇 -> css, 스크립트
div, span <- 내용이 없다
    div- block 넣기 : 큰 박스 <- 여러 요소
    span- inline(text)

(7)
응용 -> 내용 시맨틱
article <- header(hn 요소 들어감 + p, time, ..), 본문, aside, footer[기자 이름, 기자 정보]

[링크, 이미지, 미디어]
css : 비주얼, html : 콘텐츠, 기능, 구조

- 목차 : 시맨틱
- 내용1 : 일반요소


(8)
리스트 안의 리스트

- 주요메뉴1 (li)            서브메뉴1 (li)
- 주요메뉴2 (li)            서브메뉴2 (li)
- 주요메뉴3 (li)            서브메뉴3 (li)
- 주요메뉴4 (li)            => 하나로 묶기 : ul
=> 하나로 묶기 : ul

- ul의 자식이 ul이 될 수는 없다

(9)
인터넷 -> 정보공유 (연결) : 링크

주소:경로 -> 절대경로(*절대 : 값 불변) => 통신 프로토콜://도메인이름 / 경로 지정 ex)https://www.naver.com
            상대경로(*상대 : 기준값 변경) =>프로젝트 -> 중요*
            서버경로 => 서버규칙 -> 시작점