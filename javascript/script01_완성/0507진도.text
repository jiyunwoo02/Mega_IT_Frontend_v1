0507 진도

1. 
브라우저->html css javascript
    <script> 코딩 </script> -> 스크립트 코딩
    <script src=""></script> -> 연결
    <시작 명령어="함수"></끝요소> -> 이벤트 핸들러 <img on---"">
방법 -> head
        body 끝 연결

2. 
선언문 -> 기존 없는 선언 있는 존재
기본문 -> 오브젝트 속성 -> 설정
        오브젝트 메소드(조건, 식) -> 동상 
오브젝트 속성 getter(-get 가져오는) / setter (-set 설정)
오브젝트 속성 = 값
    기준
    - 오브젝트.오브젝트.속성.메소드()
    document.요소.?? = 값
    document.요소.??()
        getElementById('아이디명') <- info
        querySelector('스타일 선택자') <- #info
        style 속성
        배경칼라 -> background-color => backgroundColor

3.
classList 속성
- 메소드형을 받는다
- add('클래스명')
- remove('클래스명')

4.
문장 -> 오브젝트 -> 단계 -> document -> html -> element/attribute/text
오브젝트.속성
오브젝트.메소드(조건)
*메소드란, 특별한 형식 조건 속성

5.
click -> onclick -> 이벤트 핸들러
1. 요소 선택자
2. 스타일 -> backgroundColor -> yellow
function(){실행문}

h1{ color:red;
font-size: 30px;
  }
문장;
enter -> 문장 생각한다

6.
출력 -> 결과
콘솔창 console.log(조건)
html document.write(조건)

브라우저 -> window

7.
예약어 -> 자바스크립트 명령 / id / class
식별자 -> 사용자 이름 -> 메모리 / 함수 / 객체 / 속성, 메소드()

데이터 관리 - 연산자, 제어문, 함수, 객체

8.
선언 명령어 그릇이름
그릇이름 = 데이터

선언
let -> 데이터 선언 영역 작업
const -> 대입이 1번밖에 안됨
var -> 데이터 선언 이름 작업

데이터 정리 -> 변수 -> 데이터 정리

선언 이름 = 데이터
선언 이름 = [...]
선언 이름 = {이름:데이터, 이름:데이터} <- 속성명 : 값

( ) -> 식 조건
[ ] -> 방 번호
{ } -> 그룹


9.
문자형 -> String -> '문자데이터' "문자데이터"
숫자형 -> Number -> 계산, 작업 -> 숫자 - ~ +
논리형 -> Boolean -> true, false -> 5 < 3 : false
undefined -> 데이터 모른다. 알 수 없다 -> 에러
null -> 비우기 위해서, 만들기 위해서

10.
연산자 -> 기호형
약속이 되어 있는 기호형
1 + 2 = 3 산술 약속
const num = 1 + 2; <- 1, 2 : 피연산자

산술
대입 // 복합대입
결합
증감
비교
논리
삼항연산자 